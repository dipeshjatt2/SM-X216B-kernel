# This is a basic workflow to help you get started with Actions

name: Build droidian kernel

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Droidian kernel
    runs-on: ubuntu-latest
    container: quay.io/droidian/build-essential:current-amd64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: droidian
          
      - name: Update & install dependencies
        run: |
          apt update
          apt install curl aria2 git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison build-essential dpkg-dev findutils android-platform-prebuilts-python-linux-x86-2.7.5 bc rsync kmod cpio bison flex libssl-dev avbtool binutils-aarch64-linux-gnu gcc-4.9-aarch64-linux-android g++-4.9-aarch64-linux-android libgcc-4.9-dev-aarch64-linux-android-cross lz4 linux-packaging-snippets clang-android-12.0-r416183b -y
          
      - name: Install package build dependencies
        run: |
          package_info=$(head -n 1 debian/changelog)
          package_name=$(echo "${package_info}" | awk '{ print $1 }')
          mk-build-deps --remove --install --tool "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes" debian/control
          rm -f ${package_name}-build-deps_*.*

      - name: Build kernel
        run: |
          export PATH=/opt/android/prebuilts/python/2.7.5/bin:$PATH
          make ARCH=arm64 defconfig
          ARGS="--no-lintian -F -d -sa --no-sign --jobs=$(nproc) -aarm64"
          eval debuild "${ARGS}"
          
      - name: Move kernel to out directory
        run: |
          mkdir /out
          cp ../*.deb /out/
          cp ../*.dsc /out/
          cp ../*.tar.xz /out/
          cd /out && export bootimagename=$(ls linux-bootimage-5.10.209-xiaomi-marble_*.*.*_arm64.deb)
          dpkg-deb -R /out/$bootimagename /bootimage
          cd /bootimage
          rm boot/recovery.img-5.10.209-xiaomi-marble
          find . -type f -not -path "./DEBIAN/*" -exec md5sum {} + | sort -k 2 | sed 's/\.\/\(.*\)/\1/' > DEBIAN/md5sums
          cd /
          rm /out/$bootimagename
          dpkg-deb -b /bootimage /out/$bootimagename
          ls /out
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-droidian
          path: /out/*.*
          if-no-files-found: error
          retention-days: 1

  prepare:
    runs-on: ubuntu-latest
    name: Create GitHub release
    needs: build

    steps:
      - name: Delete old latest release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          delete_release: true # default: false
          tag_name: latest-kernel-droidian # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag latest
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest-kernel-droidian

  publish:
    runs-on: ubuntu-latest
    needs: prepare

    name: Publish kernel

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: out

      - name: Create latest release
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: out/kernel-droidian/*.*
          tag_name: latest-kernel-droidian
          draft: false
          prerelease: false
